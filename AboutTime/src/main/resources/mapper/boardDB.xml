<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.about_time.community.mapper.BoardMapper">
	
	<insert id="insertBoard" parameterType="com.about_time.community.vo.Board">
		insert into Board(title,writer,uid,category,contents,university,regDate,updateDate) 
		values (#{title},#{writer},#{uid},#{category},#{contents},#{university},now(),now())
	</insert>
	
	<select id="selectBoardList" resultType="com.about_time.community.vo.Board" parameterType="String">
		select * 
		from (select * from Board where university=#{university}) as b 
		left join (select board_num,count(*) as commentNum from BoardComment group by board_num) as c
		on b.num = c.board_num order by updateDate DESC;
	</select>
	
	<select id="selectBoardListByCategory" resultType="com.about_time.community.vo.Board" parameterType="String">
		select * 
		from (select * from Board where university=#{university}) as b 
		left join (select board_num,count(*) as commentNum from BoardComment group by board_num) as c
		on b.num = c.board_num
		where category=#{category} order by updateDate DESC;
	</select>
	
	<select id="selectBoard" resultType="com.about_time.community.vo.Board" parameterType="HashMap">
		select * ,(select count(*) from BoardComment where board_num = #{num}) as commentNum
		from Board 
		where university=#{university} and num=#{num}
	</select>
	
	<delete id="deleteBoard" parameterType="HashMap">
		delete from Board where university=#{university} and num=#{num}
	</delete>
	
	<update id="updateBoard" parameterType="HashMap">
		update Board 
		set title=#{title}, category=#{category}, contents=#{contents}, updateDate=now() 
		where university=#{university} and num=#{num}
	</update>
	
	<select id="getBoardCount" parameterType="HashMap" resultType="Integer">
		<![CDATA[
		select count(*) 
		from (select num ,updateDate from Board where university=#{university} order by updateDate DESC) ALIAS_FOR_SUBQUERY 
		where num >= (select num from Board where num=#{num})
		]]>
	</select>
	
	<update id="increasementBoardView" parameterType="Integer">
		update Board
		set hits = hits + 1
		where num = #{num}
	</update>
	
	<select id="searchBoard" resultType="com.about_time.community.vo.Board" parameterType="String">
		select * 
		from (select * from Board where university=#{university}) as b 
		left join (select board_num,count(*) as commentNum from BoardComment group by board_num) as c
		on b.num = c.board_num 
		<if test="searchType.equals('subject')">
		where title like '%${searchKey}%'
		</if>
		<if test="searchType.equals('subject_content')">
		where title like '%${searchKey}%' or contents like '%${searchkey}%'
		</if>
		<if test="searchType.equals('writer')">
		where writer like '%${searchKey}%'
		</if>
		order by updateDate DESC;
	</select>
</mapper>